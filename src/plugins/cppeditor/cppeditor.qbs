import qbs.FileInfo

QtcPlugin {
    name: "CppEditor"

    Depends { name: "Qt.widgets" }
    Depends { condition: project.withAutotests; name: "Qt.testlib" }

    Depends { name: "ClangSupport" }
    Depends { name: "CPlusPlus" }
    Depends { name: "Utils" }

    Depends { name: "Core" }
    Depends { name: "TextEditor" }
    Depends { name: "ProjectExplorer" }

    Depends { name: "app_version_header" }

    pluginTestDepends: [
        "QmakeProjectManager",
        "QbsProjectManager",
    ]

    cpp.defines: base
    Properties {
        condition: qbs.toolchain.contains("msvc")
        cpp.defines: base.concat("_SCL_SECURE_NO_WARNINGS")
    }

    files: [
        "abstracteditorsupport.cpp",
        "abstracteditorsupport.hpp",
        "abstractoverviewmodel.hpp",
        "baseeditordocumentparser.cpp",
        "baseeditordocumentparser.hpp",
        "baseeditordocumentprocessor.cpp",
        "baseeditordocumentprocessor.hpp",
        "builtincursorinfo.cpp",
        "builtincursorinfo.hpp",
        "builtineditordocumentparser.cpp",
        "builtineditordocumentparser.hpp",
        "builtineditordocumentprocessor.cpp",
        "builtineditordocumentprocessor.hpp",
        "builtinindexingsupport.cpp",
        "builtinindexingsupport.hpp",
        "clangbasechecks.ui", // FIXME: Is this used at all?
        "clangdiagnosticconfig.cpp",
        "clangdiagnosticconfig.hpp",
        "clangdiagnosticconfigsmodel.cpp",
        "clangdiagnosticconfigsmodel.hpp",
        "clangdiagnosticconfigsselectionwidget.cpp",
        "clangdiagnosticconfigsselectionwidget.hpp",
        "clangdiagnosticconfigswidget.cpp",
        "clangdiagnosticconfigswidget.hpp",
        "clangdiagnosticconfigswidget.ui",
        "compileroptionsbuilder.cpp",
        "compileroptionsbuilder.hpp",
        "cppautocompleter.cpp",
        "cppautocompleter.hpp",
        "cppbuiltinmodelmanagersupport.cpp",
        "cppbuiltinmodelmanagersupport.hpp",
        "cppcanonicalsymbol.cpp",
        "cppcanonicalsymbol.hpp",
        "cppchecksymbols.cpp",
        "cppchecksymbols.hpp",
        "cppcodeformatter.cpp",
        "cppcodeformatter.hpp",
        "cppcodemodelinspectordialog.cpp",
        "cppcodemodelinspectordialog.hpp",
        "cppcodemodelinspectordialog.ui",
        "cppcodemodelinspectordumper.cpp",
        "cppcodemodelinspectordumper.hpp",
        "cppcodemodelsettings.cpp",
        "cppcodemodelsettings.hpp",
        "cppcodemodelsettingspage.cpp",
        "cppcodemodelsettingspage.hpp",
        "cppcodemodelsettingspage.ui",
        "cppcodestylepreferences.cpp",
        "cppcodestylepreferences.hpp",
        "cppcodestylepreferencesfactory.cpp",
        "cppcodestylepreferencesfactory.hpp",
        "cppcodestylesettings.cpp",
        "cppcodestylesettings.hpp",
        "cppcodestylesettingspage.cpp",
        "cppcodestylesettingspage.hpp",
        "cppcodestylesettingspage.ui",
        "cppcodestylesnippets.hpp",
        "cppcompletionassist.cpp",
        "cppcompletionassist.hpp",
        "cppcompletionassistprocessor.cpp",
        "cppcompletionassistprocessor.hpp",
        "cppcompletionassistprovider.cpp",
        "cppcompletionassistprovider.hpp",
        "cppcurrentdocumentfilter.cpp",
        "cppcurrentdocumentfilter.hpp",
        "cppcursorinfo.hpp",
        "cppdoxygen.cpp",
        "cppdoxygen.hpp",
        "cppdoxygen.kwgen",
        "cppeditorwidget.cpp",
        "cppeditorwidget.hpp",
        "cppeditor.qrc",
        "cppeditor_global.hpp",
        "cppeditorconstants.hpp",
        "cppeditordocument.cpp",
        "cppeditordocument.hpp",
        "cppeditoroutline.cpp",
        "cppeditoroutline.hpp",
        "cppeditorplugin.cpp",
        "cppeditorplugin.hpp",
        "cppelementevaluator.cpp",
        "cppelementevaluator.hpp",
        "cppfileiterationorder.cpp",
        "cppfileiterationorder.hpp",
        "cppfilesettingspage.cpp",
        "cppfilesettingspage.hpp",
        "cppfilesettingspage.ui",
        "cppfindreferences.cpp",
        "cppfindreferences.hpp",
        "cppfollowsymbolundercursor.cpp",
        "cppfollowsymbolundercursor.hpp",
        "cppfunctiondecldeflink.cpp",
        "cppfunctiondecldeflink.hpp",
        "cpphighlighter.cpp",
        "cpphighlighter.hpp",
        "cppincludehierarchy.cpp",
        "cppincludehierarchy.hpp",
        "cppincludesfilter.cpp",
        "cppincludesfilter.hpp",
        "cppindexingsupport.cpp",
        "cppindexingsupport.hpp",
        "cppinsertvirtualmethods.cpp",
        "cppinsertvirtualmethods.hpp",
        "cpplocalrenaming.cpp",
        "cpplocalrenaming.hpp",
        "cpplocalsymbols.cpp",
        "cpplocalsymbols.hpp",
        "cpplocatordata.cpp",
        "cpplocatordata.hpp",
        "cpplocatorfilter.cpp",
        "cpplocatorfilter.hpp",
        "cppminimizableinfobars.cpp",
        "cppminimizableinfobars.hpp",
        "cppmodelmanager.cpp",
        "cppmodelmanager.hpp",
        "cppmodelmanagersupport.cpp",
        "cppmodelmanagersupport.hpp",
        "cppoutline.cpp",
        "cppoutline.hpp",
        "cppoverviewmodel.cpp",
        "cppoverviewmodel.hpp",
        "cppparsecontext.cpp",
        "cppparsecontext.hpp",
        "cpppointerdeclarationformatter.cpp",
        "cpppointerdeclarationformatter.hpp",
        "cppprojectpartchooser.cpp",
        "cppprojectpartchooser.hpp",
        "cpppreprocessordialog.cpp",
        "cpppreprocessordialog.hpp",
        "cpppreprocessordialog.ui",
        "cppprojectfile.cpp",
        "cppprojectfile.hpp",
        "cppprojectfilecategorizer.cpp",
        "cppprojectfilecategorizer.hpp",
        "cppprojectinfogenerator.cpp",
        "cppprojectinfogenerator.hpp",
        "cppprojectupdater.cpp",
        "cppprojectupdater.hpp",
        "cppprojectupdaterinterface.hpp",
        "cppquickfix.cpp",
        "cppquickfix.hpp",
        "cppquickfixassistant.cpp",
        "cppquickfixassistant.hpp",
        "cppquickfixes.cpp",
        "cppquickfixes.hpp",
        "cppquickfixprojectsettings.cpp",
        "cppquickfixprojectsettings.hpp",
        "cppquickfixprojectsettingswidget.cpp",
        "cppquickfixprojectsettingswidget.hpp",
        "cppquickfixprojectsettingswidget.ui",
        "cppquickfixsettings.cpp",
        "cppquickfixsettings.hpp",
        "cppquickfixsettingspage.cpp",
        "cppquickfixsettingspage.hpp",
        "cppquickfixsettingswidget.cpp",
        "cppquickfixsettingswidget.hpp",
        "cppquickfixsettingswidget.ui",
        "cppqtstyleindenter.cpp",
        "cppqtstyleindenter.hpp",
        "cpprefactoringchanges.cpp",
        "cpprefactoringchanges.hpp",
        "cpprefactoringengine.cpp",
        "cpprefactoringengine.hpp",
        "cppselectionchanger.cpp",
        "cppselectionchanger.hpp",
        "cppsemanticinfo.hpp",
        "cppsemanticinfoupdater.cpp",
        "cppsemanticinfoupdater.hpp",
        "cppsourceprocessor.cpp",
        "cppsourceprocessor.hpp",
        "cpptoolsjsextension.cpp",
        "cpptoolsjsextension.hpp",
        "cpptoolsreuse.cpp",
        "cpptoolsreuse.hpp",
        "cpptoolssettings.cpp",
        "cpptoolssettings.hpp",
        "cpptypehierarchy.cpp",
        "cpptypehierarchy.hpp",
        "cppuseselectionsupdater.cpp",
        "cppuseselectionsupdater.hpp",
        "cppvirtualfunctionassistprovider.cpp",
        "cppvirtualfunctionassistprovider.hpp",
        "cppvirtualfunctionproposalitem.cpp",
        "cppvirtualfunctionproposalitem.hpp",
        "cppworkingcopy.cpp",
        "cppworkingcopy.hpp",
        "cursorineditor.hpp",
        "doxygengenerator.cpp",
        "doxygengenerator.hpp",
        "editordocumenthandle.cpp",
        "editordocumenthandle.hpp",
        "followsymbolinterface.hpp",
        "functionutils.cpp",
        "functionutils.hpp",
        "generatedcodemodelsupport.cpp",
        "generatedcodemodelsupport.hpp",
        "headerpathfilter.cpp",
        "headerpathfilter.hpp",
        "includeutils.cpp",
        "includeutils.hpp",
        "indexitem.cpp",
        "indexitem.hpp",
        "insertionpointlocator.cpp",
        "insertionpointlocator.hpp",
        "projectinfo.cpp",
        "projectinfo.hpp",
        "projectpart.cpp",
        "projectpart.hpp",
        "refactoringengineinterface.hpp",
        "resourcepreviewhoverhandler.cpp",
        "resourcepreviewhoverhandler.hpp",
        "searchsymbols.cpp",
        "searchsymbols.hpp",
        "semantichighlighter.cpp",
        "semantichighlighter.hpp",
        "senddocumenttracker.cpp",
        "senddocumenttracker.hpp",
        "stringtable.cpp",
        "stringtable.hpp",
        "symbolfinder.cpp",
        "symbolfinder.hpp",
        "symbolsfindfilter.cpp",
        "symbolsfindfilter.hpp",
        "typehierarchybuilder.cpp",
        "typehierarchybuilder.hpp",
        "usages.hpp",
        "wrappablelineedit.cpp", // FIXME: Is this used?
        "wrappablelineedit.hpp",
    ]

    Group {
        name: "TestCase"
        condition: qtc.testsEnabled || project.withAutotests
        files: [
            "cpptoolstestcase.cpp",
            "cpptoolstestcase.hpp",
        ]
    }

    Group {
        name: "Tests"
        condition: qtc.testsEnabled
        cpp.defines: outer.concat(['SRCDIR="' + FileInfo.path(filePath) + '"'])
        files: [
            "compileroptionsbuilder_test.cpp",
            "compileroptionsbuilder_test.hpp",
            "cppcodegen_test.cpp",
            "cppcodegen_test.hpp",
            "cppcompletion_test.cpp",
            "cppcompletion_test.hpp",
            "cppdoxygen_test.cpp",
            "cppdoxygen_test.hpp",
            "cppheadersource_test.cpp",
            "cppheadersource_test.hpp",
            "cppincludehierarchy_test.cpp",
            "cppincludehierarchy_test.hpp",
            "cpplocalsymbols_test.cpp",
            "cpplocalsymbols_test.hpp",
            "cpplocatorfilter_test.cpp",
            "cpplocatorfilter_test.hpp",
            "cppmodelmanager_test.cpp",
            "cppmodelmanager_test.hpp",
            "cpppointerdeclarationformatter_test.cpp",
            "cpppointerdeclarationformatter_test.hpp",
            "cppquickfix_test.cpp",
            "cppquickfix_test.hpp",
            "cppsourceprocessor_test.cpp",
            "cppsourceprocessor_test.hpp",
            "cppsourceprocessertesthelper.cpp",
            "cppsourceprocessertesthelper.hpp",
            "cppuseselections_test.cpp",
            "cppuseselections_test.hpp",
            "fileandtokenactions_test.cpp",
            "fileandtokenactions_test.hpp",
            "followsymbol_switchmethoddecldef_test.cpp",
            "followsymbol_switchmethoddecldef_test.hpp",
            "modelmanagertesthelper.cpp",
            "modelmanagertesthelper.hpp",
            "projectinfo_test.cpp",
            "projectinfo_test.hpp",
            "symbolsearcher_test.cpp",
            "symbolsearcher_test.hpp",
            "typehierarchybuilder_test.cpp",
            "typehierarchybuilder_test.hpp",
        ]
    }

    Export {
        Depends { name: "CPlusPlus" }
        Depends { name: "Qt.concurrent" }
    }
}
